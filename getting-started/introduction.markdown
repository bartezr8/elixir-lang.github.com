---
layout: getting-started
title: Введение
redirect_from: /getting_started/1.html
---

# {{ page.title }}

{% include toc.html %}

Добро пожаловать!

В ходе данных уроков мы изучим синтаксис Elixir, основные типы данных, работу с модулями и многое другое. Для начала нам нужно удостоверится в том что у нас установлен Elixir и проверить что интерактивная оболочка ( называется `IEx`) рабтает нормально.

Основыне требования:

  * Elixir - версия 1.4.0 или выше
  * Erlang - версия 18.0 или выше

итак приступим!

> Если вы обнаружили ошибки или неточности на сайте, [напишите об этом или отправте pull реквест с исправлениями](https://github.com/etroynov/elixir-lang.github.com).

## Установка

Если у вас не установлен Elixir, ознакомтесь с [руководством по установке](/install.html). После того как вы установили Elixir, для проверки правильности установки в консоле выполните команду `elixir --version` для получения текущей версии Elixir.

## Интерактивная оболочка

После установки Elixir, вам станут доступны исполняемые файлы: `iex`, `elixir` и `elixirc`. Если вы собирали Elixir из исходников или через менеджер версий, данные файлы находятся в папке `bin`.

Для начала, выполним в консоле команду `iex` (или `iex.bat` если вы работаете в Windows) для запуска интерактивной обочке Elixir. В интерактивной оболчке, мы можем выполнять код Elixir в реальном времени, незамедлительно получая результат выполнения кода. Давайте попробуем выполнить пару простых операций в интерактивной оболочке.

Перейдем в интерактивную оболочку выполнив команду `iex` в консоле и введем следующий код:

```iex
Erlang/OTP 19 [erts-8.1] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]

Interactive Elixir (1.3.4) - нажмите Ctrl+C для выхода (введите h() нажмите ENTER для получения справки)
iex(1)> 40 + 2
42
iex(2)> "hello" <> " world"
"hello world"
```

Вводить теже числа что и в премере, не обязательно, вы можете указать любоые числа которые вам нравятся. После того как мы завершили работу в `iex` нам нужно выйти из неё. Для выхода из `iex` дважды нажмите `Ctrl+C`.

> Примечание: если вы работаете в Windows, рекомендуем запускать оболочку используя команду `iex.bat --werl` для получения расширенных сообщений об ошибках.

## Выполнение скриптов

После того как мы познакомились с интерактивной оболочкой, мы можем попробовать написать простую программу. Писать программу мы будем в отдельном файле, для этого создайте новый файл и добавте в него следующие строки:

```elixir
IO.puts "Hello world from Elixir"
```

Сохраните файл с именем `simple.exs` и выполните его с помощью `elixir` для этого набирите в консоле:

```bash
$ elixir simple.exs
Hello world from Elixir
```

В последующих уроках для компиляции исходного кода Elixir (в [8 Уроке](/getting-started/modules-and-functions.html)) мы будем использовать элемент сборки `Mix` ( подробней о нем в [руководстве по Mix & OTP](/getting-started/mix-otp/introduction-to-mix.html)). Теперь мы можем перейти к изучению [базовых типов](/getting-started/basic-types.html).

## Возникли вопросы?

При прохождении данного курса, у вас могут возникнуть вопросы, в конце концов, это часть учебного процесса! Ответы на ваши вопросы в можете получить тут:

  * [#elixir-lang канал в IRC](irc://irc.freenode.net/elixir-lang)
  * [Elixir в Slack](https://elixir-slackin.herokuapp.com/)
  * [Elixir форум](http://elixirforum.com)
  * [elixir в StackOverflow](https://stackoverflow.com/questions/tagged/elixir)

Перед тем как задать вопрос, учтите что:

  * Вместо того что бы спросить "как сделать X в Elixir", лучше спросите "как решить Y в Elixir". Другими словами, не спрашивайте как реализовать конкретную фичу, вместо этого опишите проблему в целом. Описание проблемы в целом позволяет придумать более оптимальное решение.

  * Если какой то оператор или конструкция работает не так как описано в документации, по мимо собщения об этой проблеме, постарайтесь включить в отчет полную информацию о среде исполнения для примера: укажите версию Elixir, участок кода в котором возникла ошибка. Для хранения данных можно использовать [Gist](https://gist.github.com/).
